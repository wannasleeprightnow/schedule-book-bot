[tool.poetry]
name = "schedule-book-bot"
version = "0.1.0"
description = ""
authors = ["wannasleeprightnow <wannasleeprightnowww@gmail.com>"]
packages = [
  { include = "src" },
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
aiogram = "^3.2.0"
python-dotenv = "^1.0.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.1"
psycopg2-binary = "^2.9.9"
asyncpg = "^0.29.0"
openpyxl = "^3.1.2"
aiosqlite = "^0.19.0"
multidict = "^6.6.3"
ruff = "^0.12.7"

[tool.ruff]
line-length = 79
extend-exclude = ["src/db/migrations/"]

[tool.ruff.lint]
select = [
    "E",  # Ошибки
    "F",  # PEP 8
    "W",  # Предупреждения
    "I",  # Улучшения стиля (Stylistic issues)
    "UP", # Обновления Python
    "N",  # Сложные правила именования
    "BLE", # Bugbear
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "C",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "PIE", # flake8-pie
    "PL",  # Pylint
    "Q",  # flake8-quotes
    "RUF", # Ruff-specific rules
    "S",  # flake8-bandit
    "T",  # flake8-print
    "W",  # pycodestyle
    "YTT", # flake8-2020
    "ANN",
]
ignore = ["ANN001", "ANN101", "ANN202", "ISC001", "PLR0913"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.flake8-type-checking]
quote-annotations = true
strict = true

[tool.ruff.lint.isort]
case-sensitive = true
known-first-party = ["db", "handlers", "keyboards", "models", "services"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
